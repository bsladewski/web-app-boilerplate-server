################################################################################
# Server settings                                                              #
################################################################################

## To run the server using TLS, specify the path to the TLS certificate and key
## files. If either setting is present, the server will attempt to load the
## certificate and key files and start the server using TLS. If the server is
## unable to listen for incoming TLS connections using the certificate and key
## provided, the application will log a fatal error and exit.
# WEB_APP_CERT=./tls/cert
# WEB_APP_KEY=./tls/key

## The port on which the server will listen for incoming connections.
WEB_APP_PORT=8080

## In some cases, such as account management emails, the server will format a
## link to the frontend application. This setting specifies the base URL for
## all generated links that point to the client.
WEB_APP_CLIENT_BASE_URL=http://app.example.com

## The server uses two separate secret keys to encrypt and decrypt access and
## refresh tokens.
WEB_APP_ACCESS_KEY=example_access_key
WEB_APP_REFRESH_KEY=example_refresh_key

## By default, debug level logs will be suppressed. Use this setting to enable
## debug level logging.
# WEB_APP_ENABLE_DEBUG_LOG=true

################################################################################
# Database settings                                                            #
################################################################################

## To connect to a MySQL database, specify the connection string. If the server
## fails to connect to the database using the supplied connection string, the
## application will log a fatal error and exit. The application does not access
## the MySQL database when running unit tests or when the in-memory database
## flag is enabled.
WEB_APP_CONNECTION_STRING=user:password@tcp(database_host:3306)/webapp

## The server may use an SQLite in-memory database. Combined with mock data,
## this can be a convenient way to test new features in development. Unit tests
## will also automatically use the in-memory database regardless of environment
## settings.
# WEB_APP_IN_MEMORY_DATABASE=true

## When initializing some models, the database can automatically load predefined
## mock data. Please reference the user model for an example of initializing a
## model that uses mock data. The initialization code should check that mock
## data is enabled through the data package and add the mock data using an
## upsert operation. If the server fails to load mock data, it will log a fatal
## error and exit.
# WEB_APP_USE_MOCK_DATA=true

################################################################################
# Email settings                                                               #
################################################################################

## Note: The server will only use one method of delivering emails. If both SMTP
## and SES is specified, the server will configure and use SMTP, ignoring the
## SES settings.

## The SMTP configuration settings to use when sending emails from the API
## server.
WEB_APP_SMTP_USERNAME=help@example.com
WEB_APP_SMTP_PASSWORD=example_smtp_password
WEB_APP_SMTP_HOST=smtp.exmaple.com
WEB_APP_SMTP_PORT=587

## The SES configuration settings to use when sending emails from the API
## server.
# WEB_APP_SES_REGION=us-east-1
# WEB_APP_SES_ACCESS_KEY_ID=XXXXXXXXXXXXXXXXXXXX
# WEB_APP_SES_ACCESS_KEY_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

## The email addresses to use when no explicit from or reply-to address is
## specified.
WEB_APP_DEFAULT_FROM_ADDRESS=help@example.com
WEB_APP_DEFAULT_REPLY_TO_ADDRESS=noreply@example.com

## The server can optionally record a log of all emails sent. These logs will
## record the outcome of the attempt to send an email and any error messages
## encountered. The logs also contain enough information to send another copy of
## the email.
WEB_APP_LOG_EMAILS=true
